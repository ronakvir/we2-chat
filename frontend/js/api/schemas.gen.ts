// This file is auto-generated by @hey-api/openapi-ts

export const $ChatRoomSeralizer = {
  type: "object",
  properties: {
    id: {
      type: "integer",
      readOnly: true,
    },
    room_name: {
      type: "string",
      maxLength: 255,
    },
    created_at: {
      type: "string",
      format: "date-time",
      readOnly: true,
    },
    user_count: {
      type: "integer",
      maximum: 2147483647,
      minimum: -2147483648,
    },
  },
  required: ["created_at", "id", "room_name"],
} as const;

export const $CreateChatRoom = {
  type: "object",
  properties: {
    room_name: {
      type: "string",
      maxLength: 255,
    },
    user_count: {
      type: "integer",
      readOnly: true,
    },
  },
  required: ["room_name", "user_count"],
} as const;

export const $Events = {
  type: "object",
  properties: {
    event_name: {
      type: "string",
      maxLength: 255,
    },
    expires_at: {
      type: "string",
      format: "date-time",
    },
    chat_room: {
      type: "integer",
      readOnly: true,
    },
    is_active: {
      type: "boolean",
      readOnly: true,
      default: true,
    },
  },
  required: ["chat_room", "event_name", "expires_at", "is_active"],
} as const;

export const $Message = {
  type: "object",
  properties: {
    message: {
      type: "string",
    },
    image: {
      type: "string",
      format: "uri",
    },
  },
  required: ["image", "message"],
} as const;

export const $PaginatedChatRoomSeralizerList = {
  type: "object",
  required: ["count", "results"],
  properties: {
    count: {
      type: "integer",
      example: 123,
    },
    next: {
      type: "string",
      nullable: true,
      format: "uri",
      example: "http://api.example.org/accounts/?offset=400&limit=100",
    },
    previous: {
      type: "string",
      nullable: true,
      format: "uri",
      example: "http://api.example.org/accounts/?offset=200&limit=100",
    },
    results: {
      type: "array",
      items: {
        $ref: "#/components/schemas/ChatRoomSeralizer",
      },
    },
  },
} as const;

export const $PaginatedUserList = {
  type: "object",
  required: ["count", "results"],
  properties: {
    count: {
      type: "integer",
      example: 123,
    },
    next: {
      type: "string",
      nullable: true,
      format: "uri",
      example: "http://api.example.org/accounts/?offset=400&limit=100",
    },
    previous: {
      type: "string",
      nullable: true,
      format: "uri",
      example: "http://api.example.org/accounts/?offset=200&limit=100",
    },
    results: {
      type: "array",
      items: {
        $ref: "#/components/schemas/User",
      },
    },
  },
} as const;

export const $PatchedChatRoomSeralizer = {
  type: "object",
  properties: {
    id: {
      type: "integer",
      readOnly: true,
    },
    room_name: {
      type: "string",
      maxLength: 255,
    },
    created_at: {
      type: "string",
      format: "date-time",
      readOnly: true,
    },
    user_count: {
      type: "integer",
      maximum: 2147483647,
      minimum: -2147483648,
    },
  },
} as const;

export const $PatchedUser = {
  type: "object",
  properties: {
    id: {
      type: "integer",
      readOnly: true,
    },
    email: {
      type: "string",
      format: "email",
      maxLength: 255,
    },
    is_active: {
      type: "boolean",
      description:
        "Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
    },
    is_staff: {
      type: "boolean",
      description: "Designates whether the user can log into this admin site.",
    },
    is_superuser: {
      type: "boolean",
      title: "Superuser status",
      description:
        "Designates that this user has all permissions without explicitly assigning them.",
    },
    created: {
      type: "string",
      format: "date-time",
      readOnly: true,
    },
    modified: {
      type: "string",
      format: "date-time",
      readOnly: true,
    },
    last_login: {
      type: "string",
      format: "date-time",
      nullable: true,
    },
  },
} as const;

export const $User = {
  type: "object",
  properties: {
    id: {
      type: "integer",
      readOnly: true,
    },
    email: {
      type: "string",
      format: "email",
      maxLength: 255,
    },
    is_active: {
      type: "boolean",
      description:
        "Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
    },
    is_staff: {
      type: "boolean",
      description: "Designates whether the user can log into this admin site.",
    },
    is_superuser: {
      type: "boolean",
      title: "Superuser status",
      description:
        "Designates that this user has all permissions without explicitly assigning them.",
    },
    created: {
      type: "string",
      format: "date-time",
      readOnly: true,
    },
    modified: {
      type: "string",
      format: "date-time",
      readOnly: true,
    },
    last_login: {
      type: "string",
      format: "date-time",
      nullable: true,
    },
  },
  required: ["created", "email", "id", "modified"],
} as const;
